(define (domain prob_domain) 
 (:requirements :strips :probabilistic-effects :conditional-effects) 
 (:constants YN FE OB FK DN NP MD JS VJ PJ )
 (:predicates 
	 (PH ?X ?Y ) 
	 (IF ?X ) 
	 (KL ?X ?Y ) 
	 (MR ?X ) 
(clear)
(not-clear)
 )
(:action RKP
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (IF ?X) 
		 (MR ?Y) 
		 (MR ?X) 
  )
 :effect (probabilistic 
		 51/100 (and (not (IF ?X)) (not (MR ?X)) )  
		 40/100 (and (not (IF ?X)) )  
		 3/100 (and (PH ?Z ?Y) )  
		 6/100 (and (IF ?Z) (PH ?Z ?X) (KL ?X ?X) )  
          )
 )
(:action TLP
 :parameters (?X ?Y )
 :precondition (and 
		 (MR ?X) 
		 (KL ?Y ?X) 
		 (IF ?Y) 
		 (IF ?X) 
  )
 :effect (probabilistic 
		 52/100 (and (KL ?X ?Y) (not (MR ?X)) )  
		 44/100 (and (PH ?X ?Y) (not (MR ?X)) )  
		 3/100 (and (not (IF ?X)) )  
		 1/100 (and (not (IF ?Y)) )  
          )
 )
(:action ZVU
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (PH ?X ?X) 
		 (KL ?X ?X) 
		 (IF ?Y) 
		 (MR ?Z) 
  )
 :effect (probabilistic 
		 87/100 (and (not (IF ?Y)) )  
		 0/100 (and (PH ?Y ?X) (KL ?Y ?Z) (not (MR ?Z)) )  
		 1/100 (and (not (KL ?X ?X)) (not (MR ?Z)) )  
		 12/100 (and (not (PH ?X ?X)) (MR ?X) )  
          )
 )
(:action BZD
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (IF ?Y) 
		 (KL ?Z ?Z) 
  )
 :effect (probabilistic 
		 26/100 (and (PH ?Y ?Z) (not (IF ?Y)) )  
		 71/100 (and (KL ?Y ?Y) (not (IF ?Y)) (KL ?Z ?X) )  
		 0/100 (and (PH ?Z ?X) (not (KL ?Z ?Z)) (not (IF ?Y)) )  
		 0/100 (and (MR ?X) (KL ?X ?X) )  
		 3/100 (and (not (IF ?Y)) (KL ?Y ?Z) )  
          )
 )
(:action reset1 
 :precondition (not-clear)
 :effect (and 
	     (forall (?x) (and 
      (not (PH ?x YN)) 
      (not (PH ?x FE)) 
      (not (PH ?x OB)) 
      (not (PH ?x FK)) 
      (not (PH ?x DN)) 
      (not (PH ?x NP)) 
      (not (PH ?x MD)) 
      (not (PH ?x JS)) 
      (not (PH ?x VJ)) 
      (not (PH ?x PJ)) 
      (not (IF ?x)) 
      (not (KL ?x YN)) 
      (not (KL ?x FE)) 
      (not (KL ?x OB)) 
      (not (KL ?x FK)) 
      (not (KL ?x DN)) 
      (not (KL ?x NP)) 
      (not (KL ?x MD)) 
      (not (KL ?x JS)) 
      (not (KL ?x VJ)) 
      (not (KL ?x PJ)) 
      (not (MR ?x)) 
))
(not (not-clear))
(clear)))

(:action reset2 
 :precondition (clear) 
 :effect (and (not-clear)
              (not (clear))
(PH FK FK) 
(PH FE FE) 
(PH DN JS) 
(PH YN YN) 
(MR MD) 
(KL YN YN) 
(IF PJ) 
(MR DN) 
(PH FK MD) 
(PH VJ VJ) 
(IF JS) 
(KL DN OB) 
(KL JS NP) 
(KL OB OB) 
(MR VJ) 
(PH FK VJ) 
)))
