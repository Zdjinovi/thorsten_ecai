(define (domain prob_domain) 
 (:requirements :strips :probabilistic-effects :conditional-effects) 
 (:constants QA UI MO TU PR PG BL UQ UP GD )
 (:predicates 
	 (LK ?X ?Y ) 
	 (MY ?X ?Y ) 
	 (GU ?X ?Y ) 
	 (BT ?X ?Y ) 
	 (WK ?X ) 
(clear)
(not-clear)
 )
(:action PED
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (BT ?Z ?Y) 
		 (BT ?X ?Y) 
  )
 :effect (probabilistic 
		 69/100 (and (LK ?Y ?Y) (MY ?Z ?Z) )  
		 31/100 (and (LK ?X ?Y) (LK ?Y ?Y) (GU ?X ?X) (not (BT ?X ?Y)) )  
          )
 )
(:action EXV
 :parameters (?X ?Y )
 :precondition (and 
		 (WK ?Y) 
		 (GU ?X ?Y) 
		 (WK ?X) 
  )
 :effect (probabilistic 
		 94/100 (and (LK ?Y ?X) )  
		 4/100 (and (LK ?Y ?Y) (not (WK ?Y)) )  
		 0/100 (and (BT ?Y ?Y) )  
		 2/100 (and (not (GU ?X ?Y)) (LK ?X ?Y) (BT ?X ?Y) )  
          )
 )
(:action DYR
 :parameters (?X ?Y )
 :precondition (and 
		 (GU ?Y ?Y) 
  )
 :effect (probabilistic 
		 100/100 (and (not (GU ?Y ?Y)) (LK ?Y ?X) )  
          )
 )
(:action JKO
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (MY ?Y ?Y) 
		 (GU ?Y ?Z) 
  )
 :effect (probabilistic 
		 100/100 (and (LK ?Z ?Z) (not (MY ?Y ?Y)) (BT ?X ?Y) (MY ?X ?X) )  
          )
 )
(:action UPX
 :parameters (?X ?Y )
 :precondition (and 
		 (MY ?X ?Y) 
  )
 :effect (probabilistic 
		 100/100 (and (WK ?X) )  
          )
 )
(:action RJZ
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (MY ?Y ?Z) 
		 (MY ?Z ?Z) 
		 (LK ?X ?Y) 
		 (MY ?X ?X) 
  )
 :effect (probabilistic 
		 13/100 (and (not (MY ?Z ?Z)) (BT ?X ?Y) (GU ?Z ?Y) (not (MY ?X ?X)) (GU ?Y ?X) )  
		 87/100 (and (GU ?Z ?X) (GU ?Y ?Y) (not (MY ?Z ?Z)) (not (LK ?X ?Y)) (WK ?Z) )  
          )
 )
(:action reset1 
 :precondition (not-clear)
 :effect (and 
	     (forall (?x) (and 
      (not (LK ?x QA)) 
      (not (LK ?x UI)) 
      (not (LK ?x MO)) 
      (not (LK ?x TU)) 
      (not (LK ?x PR)) 
      (not (LK ?x PG)) 
      (not (LK ?x BL)) 
      (not (LK ?x UQ)) 
      (not (LK ?x UP)) 
      (not (LK ?x GD)) 
      (not (MY ?x QA)) 
      (not (MY ?x UI)) 
      (not (MY ?x MO)) 
      (not (MY ?x TU)) 
      (not (MY ?x PR)) 
      (not (MY ?x PG)) 
      (not (MY ?x BL)) 
      (not (MY ?x UQ)) 
      (not (MY ?x UP)) 
      (not (MY ?x GD)) 
      (not (GU ?x QA)) 
      (not (GU ?x UI)) 
      (not (GU ?x MO)) 
      (not (GU ?x TU)) 
      (not (GU ?x PR)) 
      (not (GU ?x PG)) 
      (not (GU ?x BL)) 
      (not (GU ?x UQ)) 
      (not (GU ?x UP)) 
      (not (GU ?x GD)) 
      (not (BT ?x QA)) 
      (not (BT ?x UI)) 
      (not (BT ?x MO)) 
      (not (BT ?x TU)) 
      (not (BT ?x PR)) 
      (not (BT ?x PG)) 
      (not (BT ?x BL)) 
      (not (BT ?x UQ)) 
      (not (BT ?x UP)) 
      (not (BT ?x GD)) 
      (not (WK ?x)) 
))
(not (not-clear))
(clear)))

(:action reset2 
 :precondition (clear) 
 :effect (and (not-clear)
              (not (clear))
(LK TU PG) 
(BT UI UI) 
(GU PG BL) 
(MY GD UP) 
(BT BL MO) 
(BT PR PG) 
(MY TU QA) 
(BT PG TU) 
(WK MO) 
(MY UI PG) 
(WK UI) 
(LK UQ UP) 
(WK QA) 
(WK TU) 
(MY PG QA) 
(LK PG TU) 
(BT GD BL) 
(WK PG) 
(LK QA UP) 
(MY GD MO) 
(GU TU UQ) 
(MY BL TU) 
(MY PR PR) 
(MY PG UQ) 
(WK UQ) 
(LK PR QA) 
(LK QA QA) 
(GU MO PR) 
(GU UQ TU) 
(WK PR) 
(MY PR UP) 
(GU GD GD) 
)))
