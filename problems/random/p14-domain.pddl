(define (domain prob_domain) 
 (:requirements :strips :probabilistic-effects :conditional-effects) 
 (:constants IW FW IG NQ ZJ HU RS HQ WX ID )
 (:predicates 
	 (CV ?X ?Y ) 
	 (US ?X ?Y ) 
	 (ZE ?X ) 
	 (NI ?X ?Y ) 
	 (KT ?X ?Y ) 
	 (VS ?X ) 
(clear)
(not-clear)
 )
(:action DJZ
 :parameters (?X )
 :precondition (and 
		 (US ?X ?X) 
  )
 :effect (probabilistic 
		 18/100 (and (not (US ?X ?X)) (NI ?X ?X) (KT ?X ?X) (CV ?X ?X) )  
		 79/100 (and (KT ?X ?X) (not (US ?X ?X)) (NI ?X ?X) )  
		 3/100 (and (not (US ?X ?X)) (CV ?X ?X) )  
          )
 )
(:action GRJ
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (VS ?Z) 
		 (NI ?Y ?Y) 
		 (ZE ?X) 
		 (NI ?X ?Z) 
		 (US ?Y ?Z) 
  )
 :effect (probabilistic 
		 26/100 (and (not (NI ?Y ?Y)) (CV ?Z ?Z) )  
		 62/100 (and (not (ZE ?X)) (KT ?X ?Y) (CV ?Z ?X) (CV ?Y ?Y) )  
		 7/100 (and (not (NI ?Y ?Y)) (NI ?X ?X) )  
		 1/100 (and (NI ?X ?X) )  
		 4/100 (and (not (US ?Y ?Z)) (VS ?X) )  
          )
 )
(:action DNC
 :parameters (?X ?Y )
 :precondition (and 
		 (NI ?Y ?Y) 
		 (VS ?X) 
  )
 :effect (probabilistic 
		 88/100 (and (ZE ?Y) (CV ?X ?Y) (US ?X ?X) )  
		 0/100 (and (ZE ?Y) (not (VS ?X)) )  
		 12/100 (and (not (VS ?X)) )  
          )
 )
(:action ZWH
 :parameters (?X ?Y )
 :precondition (and 
		 (NI ?X ?X) 
		 (US ?Y ?X) 
		 (NI ?Y ?Y) 
		 (US ?Y ?Y) 
  )
 :effect (probabilistic 
		 35/100 (and (VS ?Y) (KT ?X ?X) (not (US ?Y ?X)) (not (NI ?X ?X)) )  
		 65/100 (and (VS ?X) )  
          )
 )
(:action DWL
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (ZE ?X) 
		 (VS ?Z) 
		 (ZE ?Y) 
  )
 :effect (probabilistic 
		 100/100 (and (US ?Y ?X) (not (ZE ?X)) )  
          )
 )
(:action LUP
 :parameters (?X ?Y )
 :precondition (and 
		 (VS ?X) 
		 (ZE ?Y) 
		 (NI ?X ?X) 
		 (ZE ?X) 
  )
 :effect (probabilistic 
		 100/100 (and (CV ?X ?Y) )  
          )
 )
(:action reset1 
 :precondition (not-clear)
 :effect (and 
	     (forall (?x) (and 
      (not (CV ?x IW)) 
      (not (CV ?x FW)) 
      (not (CV ?x IG)) 
      (not (CV ?x NQ)) 
      (not (CV ?x ZJ)) 
      (not (CV ?x HU)) 
      (not (CV ?x RS)) 
      (not (CV ?x HQ)) 
      (not (CV ?x WX)) 
      (not (CV ?x ID)) 
      (not (US ?x IW)) 
      (not (US ?x FW)) 
      (not (US ?x IG)) 
      (not (US ?x NQ)) 
      (not (US ?x ZJ)) 
      (not (US ?x HU)) 
      (not (US ?x RS)) 
      (not (US ?x HQ)) 
      (not (US ?x WX)) 
      (not (US ?x ID)) 
      (not (ZE ?x)) 
      (not (NI ?x IW)) 
      (not (NI ?x FW)) 
      (not (NI ?x IG)) 
      (not (NI ?x NQ)) 
      (not (NI ?x ZJ)) 
      (not (NI ?x HU)) 
      (not (NI ?x RS)) 
      (not (NI ?x HQ)) 
      (not (NI ?x WX)) 
      (not (NI ?x ID)) 
      (not (KT ?x IW)) 
      (not (KT ?x FW)) 
      (not (KT ?x IG)) 
      (not (KT ?x NQ)) 
      (not (KT ?x ZJ)) 
      (not (KT ?x HU)) 
      (not (KT ?x RS)) 
      (not (KT ?x HQ)) 
      (not (KT ?x WX)) 
      (not (KT ?x ID)) 
      (not (VS ?x)) 
))
(not (not-clear))
(clear)))

(:action reset2 
 :precondition (clear) 
 :effect (and (not-clear)
              (not (clear))
(ZE IG) 
(US ZJ HQ) 
(NI HQ NQ) 
(NI IW NQ) 
(NI HU WX) 
(NI HQ HU) 
(VS HQ) 
(ZE ZJ) 
(KT IW HQ) 
(KT HU NQ) 
(CV IW RS) 
(US FW WX) 
(ZE HU) 
(CV FW HU) 
(VS WX) 
(US RS WX) 
(NI ID IG) 
(ZE WX) 
(VS IW) 
(KT HU WX) 
(CV NQ NQ) 
(NI NQ HU) 
(NI FW RS) 
(CV IG HQ) 
(VS ID) 
(CV ZJ ID) 
(CV HU WX) 
(CV ID ZJ) 
(ZE NQ) 
(VS RS) 
(ZE HQ) 
(NI NQ FW) 
(CV RS WX) 
(NI WX HQ) 
(US IG ZJ) 
(VS FW) 
)))
